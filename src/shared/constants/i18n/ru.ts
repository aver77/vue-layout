import { SidebarKeys } from '../enums/sidebarKeys';
import { getBoldText, getUnderlinedText } from './utils';

const ru = {
    shared: {
        i: 'Я'
    },
    components: {
        header: {
            resumeBtn: 'Моё Резюме'
        },
        sidebar: {
            [SidebarKeys.About]: 'Обо мне',
            [SidebarKeys.Projects]: 'Проекты',
            [SidebarKeys.Experience]: 'Опыт',
            [SidebarKeys.Contact]: 'Контакты'
        },
        footer: {
            copyright: 'Все права защищены © {year}'
        }
    },
    main: {
        shortInformation: {
            nameGreet: 'Привет, я Никита',
            jobTitle: 'Фронтенд разработчик',
            description:
                'Я творческий и постоянно развивающийся разработчик с более чем трёхлетним опытом работы, любящий создавать продукты, которые нравятся людям. Горю желанием применить свой опыт, решая неординарные задачи и принося прибыль клиентам.',
            contactBtn: 'Связаться'
        },
        about: {
            title: 'Обо мне',
            information:
                'Моя экспертиза охватывает множество разнообразных областей: я разрабатывал высоконагруженные продукты и стартап проекты, руководил разработкой команды, а также делал веб-приложения на заказ.\n' +
                'Я очень клиентоориентирован, люблю тесно взаимодействовать с продуктом и всегда нацелен на его успех. Быстро погружаюсь в проекты, приношу пользу бизнесу, предлагая новые идеи и сохраняя при этом клиентоориентированное мышление.\n' +
                'Я не ограничиваю себя определенными технологиями, работаю с различными библиотеками и фреймворками, такими как React.js, Next.js, Vue.js и тд.\n' +
                'Обладаю отличными навыками коммуникации и всегда открыт новым профессиональным знакомствам!',
            myLinks: 'Мои Ссылки',
            stackTitle: {
                work: 'Использую на работе',
                frontend: 'Использую в своих фронтенд проектах',
                backend: 'Использую в своих бэкенд проектах'
            }
        },
        projects: {
            title: 'Проекты',
            modal: {
                projectLinks: 'Ссылки на проект',
                sourceCode: 'исходный код',
                liveProject: 'проект онлайн'
            },
            webChat: {
                title: 'Веб-чат с автопереводом',
                shortDesc:
                    'Приложение для перевода в режиме реального времени, нацеленное на межкультурное и межъязыковое общение.',
                longDesc:
                    'NApp - это приложение для перевода в режиме реального времени, предназначенное для межкультурного и межъязыкового общения.\n' +
                    'Вы можете выбрать язык перевода из предложенных. И с этого момента все сообщения в текстовом чате будут переводиться на него. Более того, вы можете совершить видео звонок любому пользователю приложения, для того, чтобы видеть и слышать своего собеседника, а также читать субтитры c его речью на выбранном вами языке.\n' +
                    'Что касается разработки - это фуллстек приложение с фронтендом на React.js + Typescript, который взаимодействует с серверной частью по протоколам HTTP и WS, а также распознаёт речь с помощью Google Speech-Recognition API\n' +
                    'Бэкенд написан на Node.js + Express.js с высокоуровневой микросервисной архитектурой. Он состоит из 3 микросервисов: Шлюз - отвечает за JWT авторизацию и перенаправление запросов в другие микросервисы, Переводчик - отвечает за перевод всех текстов с использованием Yandex Translate API и Сервис Чатов - он реализует обмен сообщениями и метаданными с клиентской частью при помощи веб-сокет протокола.\n' +
                    'Приложение было полностью развернуто в Azure. Фронтенд - с использованием VM + nginx. Бэкэнд - c использованием кластера Kubernetes + terraform.'
            },
            aiChat: {
                title: 'Чат, имитирующий ответы от ИИ',
                shortDesc:
                    'Это веб-приложение имитирует пользовательский интерфейс и постепенные побуквенные ответы на вопросы, как в ChatGPT.',
                longDesc:
                    'Приложение, предоставляющее пользователю приятный интерфейс и возможность отправлять различные вопросы в формате сообщения и получать на них ответы от сервера.\n' +
                    'Проект был написан на React.js + Typescript с использованием модульной фронтенд архитектуры и сборщика Vite.\n' +
                    'Главной особенностью этого приложения является использование нового метода, добавленного в fetch API - потоковой обработки. Данные с сервера поступают в формате чанков. Для их обработки открывается поток на чтение данных. Каждый чанк декодируется в цикле и постепенно побуквенно формирует ответ пользователю, создавая эффект ИИ чат-бота.'
            },
            compiler: {
                title: 'Веб-компилятор',
                shortDesc:
                    'Приложение, позволяющее компилировать код на различных языках программирования и видеть результат его выполнения.',
                longDesc:
                    'NW Compiler позволяет компилировать код на Python, C++ и JavaScript.\n' +
                    'Это фуллстек приложение. Клиентская часть была построена на React.js и библиотеке MUI. Кроме того, для улучшения пользовательского опыта были добавлены локализация и темизация.\n' +
                    'Бэкенд был написан на Node.js + Express с использованием монолитной архитектуры. Его цель - скомпилировать код, полученный с помощью HTTP Post-запроса. Для этого создается файл с расширением, соответствующим его языку. А с помощью дочернего процесса (модуля exec, встроенного в Node.js) компиляция происходит на машине, с которой запущен сервер. Для этого используются предустановленные пакеты g++, node и python.'
            },
            insuranceApp: {
                title: 'Приложение онлайн-страхования',
                shortDesc:
                    'В данном приложении реализован удобный процесс страхования, красивый интерфейс и обширный клиентский функционал.',
                longDesc:
                    'Данное приложение позволяет приобрести страховку онлайн для различных типов имущества.\n' +
                    'Оно реализовано в рамках заказной разработки, использованием React.js и UI библиотеки Ant Design, а также модульной фронтенд архитектуры для лучшей масштабируемости.\n' +
                    'По договоренности была реализована только часть функционала - основная адаптивная страница с локализацией и бизнес-процессом оформления автострахования. Весь интерфейс выполнен на основе макетов Figma, полученных от дизайнера.\n' +
                    'На данный момент я выполнил свою роль в разработке и исходный код приложения передан сторонней команде для дальнейшей разработки.'
            },
            nextPortfolio: {
                title: 'Портфолио на Next.js',
                shortDesc:
                    'Это первая версия моего портфолио. В процессе его реализации - я оттачивал навыки использования Next.js.',
                longDesc:
                    'Первая версия моего портфолио выполнена в виде интерактивного веб-резюме для дополнительного удобства. Оно содержит информацию обо мне, о моём опыте работы и навыках.\n' +
                    'Проект был написан на 13-й версии Next.js с использованием модульной фронтенд архитектуры.\n' +
                    'Данное приложение содержит информацию о моих последних и лучших проектах. К сожалению, на большинство проектов распространяется соглашение о неразглашении, поэтому я не могу поделиться ими. Но, у меня на GitHub есть еще множество других проектов, о которых я не упомянул здесь. Посмотреть их исходный код можно по ссылке выше. Среди них множество сверстанных макетов страниц, простые приложения для отработки навыков и веб-приложения, написанные на разнообразных фреймворках. Также есть и консольных программ на различных языках программирования и многое другое.\n' +
                    'Первая версия моего портфолио отражает мой практический опыт, но что касается UX и дизайна, то я думаю, что это не его сильная сторона. В связи с этим я разработал вторую версию с лучшим UX и дизайном.'
            },
            vuePortfolio: {
                title: 'Портфолио на Vue.js',
                shortDesc:
                    'Это вторая версия моего портфолио. В процессе его реализации - я оттачивал навыки использования 3-ей версии Vue.js',
                longDesc:
                    'Вторая версия моего портфолио выполнена в виде интерактивного веб-резюме для дополнительного удобства. Оно содержит информацию обо мне, о моём опыте работы и навыках.\n' +
                    'Проект был написан на 3-й версии Vue.js с использованием модульной фронтенд архитектуры.\n' +
                    'Данное приложение содержит информацию о моих последних и лучших проектах. К сожалению, на большинство проектов распространяется соглашение о неразглашении, поэтому я не могу поделиться ими. Но, у меня на GitHub есть еще множество других проектов, о которых я не упомянул здесь. Посмотреть их исходный код можно по ссылке выше. Среди них множество сверстанных макетов страниц, простые приложения для отработки навыков и веб-приложения, написанные на разнообразных фреймворках. Также есть и консольных программ на различных языках программирования и многое другое.\n' +
                    'Вторая версия моего портфолио отражает мой практический опыт и, на мой взгляд, имеет лучший дизайн и интерфейс, чем первая версия.'
            },
            learnMore: 'Узнать больше'
        },
        experience: {
            title: 'Experience',
            vk: {
                title: 'ВК',
                startDate: 'Июль 2024',
                endDate: 'По настоящее время',
                position: 'Senior Frontend Developer',
                location: 'Удаленно',
                description:
                    ` - ${getBoldText('Ускорил скорость чистой сборки React части на 30%.')} Добавил кеширование, с ним ${getBoldText('скорость выше до 80%.')}\n` +
                    ` - ${getBoldText('Увеличил crash-free с 79% до 88.5%,')} внедрив механизм фильтрации рекламных и Adblock ошибок в нашу систему логирования.\n` +
                    ` - ${getBoldText('Исправил более 20% падающих автотестов и на 5% сократил общее время их прогона')}. Увеличил покрытие проекта тестовыми аттрибутами в ~3.5 раза.\n` +
                    ` - ${getBoldText('Улучшил метрику INP на 7%,')} оптимизировав первоначальную загрузку js-модулей.\n` +
                    ` - Разработал страницу ok.ru/pozdravleniya, множество компонентов в UI Kit.\n` +
                    ` - Стабилизировал проект: внедрил PMD-анализ java кода, подключил stylus линтер, перевел проект на строгий tsconfig, ${getBoldText('исправив более 4.500 typescript ошибок,')} написал eslint правило для проверки аттрибутов.\n`
            },
            it1: {
                title: 'Газпромбанк',
                startDate: 'Май 2023',
                endDate: 'Июль 2024',
                position: 'Senior Frontend Developer',
                location: 'Удаленно',
                description:
                    ` - Уменьшил ${getBoldText('время сборки')} всего проекта ${getBoldText('на ~50%.')}\n` +
                    ` - ${getBoldText('Уменьшил')} количество месячных ${getBoldText('crash-репортов в поддержку с 800 до 600')} (в среднем).\n` +
                    ` - ${getBoldText('Улучшил UI/UX')} метрику удовлетворенности пользователей ${getBoldText('на ~40%.')}\n` +
                    ` - ${getBoldText('Полностью конфигурировал процесс CI')}, что привело к ${getBoldText('12% увеличению TTM.')}\n` +
                    ` - Разработал UI Kit для всего приложения с нуля.\n` +
                    ` - Создал детальную проектную документацию, ${getBoldText('скорил процесс онбординга в 2 раза.')}`
            },
            tecom: {
                title: 'Теком',
                startDate: 'Декабрь 2020',
                endDate: 'Май 2023',
                position: 'Frontend Developer',
                location: 'Удаленно',
                description:
                    ` - Увеличил покрытие проекта ${getBoldText('unit и e2e тестами с ~20% до ~80%.')}\n` +
                    ` - Мигрировал проект с классовых компонентов на React 17, ${getBoldText('увеличил TTM до 10%.')}\n` +
                    ` - ${getBoldText('Уменьшил время загрузки страниц в среднем на 15%,')} внедрив механизм фетчинга данных из react-query.\n` +
                    ` - C нуля разработал 3 ключевые библиотеки, которые покрывают до 80% отчетности компании: констркутор графиков, конструктор диаграмм, конструктор pdf-отчетов.`
            }
        },
        contact: {
            title: 'Контакты',
            messageStart:
                'Напишите мне по электронной почте, если хотите связаться! Вы также можете найти меня на',
            messageDivider: 'или в',
            messageEnd: 'если вам так быстрее.'
        }
    }
};
export default ru;
